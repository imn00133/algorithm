# 20.01.19.
현재 모듈 단위 convention은 숫자_문제 이름으로 사용하고 있다.
다만, debugging을 위해 import를 하면 오류가 난다(invalid token)
이를 검색해보니, 식별자는 숫자로 시작할 수 없다...
https://rfriend.tistory.com/305
이렇게 간단한 거에서 버그를 내다니.
절 별로 폴더를 나누기는 약간 많고, interpreter에서 불러와서 해결하는 걸 포기해야겠다.

_(underscore)에서 오류나는 줄 알고 겸사겸사 underscore도 찾아보았다.
https://mingrammer.com/underscore-in-python/

레오폴드 저소음 적축을 샀는데, 키압이 너무 낮은 것 같다.
자꾸 오타가 나는게 원... 적응되면 나아지지 않을까 싶다.
왼쪽 팔목이 아픈데, 이건 팜레스트를 사고 운동도 해야되지 않을까 싶다.
왼쪽 팔목을 일직선으로 두게 되면 좀 괜찮은데 흐음.
오른쪽 팔목도 그런 느낌이 있는게, 주의해야 될 것 같다.

# 20.01.30.
만들다 만 카라츠바 곱셈을 마져 작성했다.
다만, 책에서 구현안된 부분 쪽 문제가 꽤 있어서 많은 오류를 수정하였다.
몇 가지 테스트를 했을 때, 문제가 없는 것을 보아. 아마 버그가 없을 듯 한데...
꼭 새로운 변수를 만들지 않는 것도 좋은 것 같다.

tistory 블로그를 시작하였다. https://bk-worm.tistory.com
다만, 글쓰는게 힘들 뿐. 첫 글을 뭘 쓸지 모르겠다.
python 강의자료도 올리고 해야되는데.

모니터를 보고 있으니 눈이 아프다.
캘리브레이션까지 했는데 흰색을 보고 있으면 눈이 피로하다.
조명문제인지 아닌지 모르겠구만. 결국 모니터를 하나 더 사긴 했는데.. 흐음.

# 20.03.19.
간만에 접속하여 문제 풀이를 남겼다.
전역한 이후로 정신건강도 안 좋았고, 공부를 하고 싶지 않았기 때문이다.
좀 정신차리고 움직이고 있는데, 공부가 잘 안된다.
디지털로 글을 읽으면 건너뛰어서 읽고, 오프라인도 잘 읽지 못하고 있다.

글 쓸 것도 많은데, 언제 쓸지 모르겠다. 어휴
Algorithm 관련해서도 글을 조금씩 써야 될 것 같은데...
오늘 공부했던 부분에 대해서도 글을 써야겠다.

# 20.03.20.
10828문제에서 문제가 조금 있었다. 2-3시간 소비했는데... 단순한 버그였다.

오늘 공부하면서 알게 된 점은 다음과 같다.
super()는 암묵적으로 self를 주기 때문에, self를 전달하지 않아도 self에 자동 사용이 된다.
시간 초과가 날 경우에는 import sys, sys.std.readline을 사용하면 된다.
input을 대체해서 사용해도 된다. 단, strip으로 뒤에 붙은 '\n'을 삭제해야 한다.
stack은 list의 잦은 사용으로 느린 듯하다. pythonic한 방법이 더 빠르다.
단어를[::-1]로 하면, 역순으로 출력이 가능하다.

C++도 공부하긴 해야되는데 귀찮다.
영어 공부도 해야되는데 다 놓고... 컴퓨터 공부만 하고 있다.

# 20.03.21.
1874번 문제에서 거의 비슷한 방법인데, 다른 사람보다 속도가 매우 느렸다.
빠른 사람들을 천천히 살펴보니, string연산이 아니라 리스트로 op_string을 처리하는 것을 보았다.
string의 덧셈을 리스트로 변경하니, 속도가 8배 빨라졌다.
string연산이 매우 느리니 주의해야겠다.

# 20.03.24.
2일정도 쉬다가 간만에 문제를 풀었다. 쇠막대기(10799)까지는 풀만 했는데, 오큰수는 brute force밖에 생각이 나지 않는다.
내일까지 고민해보고, 강의를 들어야겠다.

# 20.03.25.
단어뒤집기2 17413문제는 flag를 사용하지 않고 해결하려고 했는데, flag를 사용하는 것도 나쁘지 않을 것 같다.
좀 더 복잡해지긴 했지만, 크게 문제는 없으니 넘겨도 될 것 같다.
쇠막대기(10799)문제의 해결 방법을 보니, flag를 사용하지 않고 index를 통해 레이저인지 아닌지 판단하는 방법이 있었다.
방법은 거의 같고 채점된 실행속도는 같았지만, 읽기가 더 좋았다.
오큰수(17298)는 스택을 사용해서 문제를 해결할 수 있다는 점이 신기했다.
스택을 통해 큰 수를 내림차순으로 정리할 수 있다는 점은 고려하지 못했던 것 같다.
앞으로 문제를 계속 풀다보면 보이지 않을까 싶다.

오등큰수(17299)는 갑자기 runtime error가 떠서 당황했는데, 1,000,000을 넣기 위해서는 배열이 1이 더 커야 되었다.
항상 맨 첫 값과 끝 값은 주의해야 한다.

자료구조 1의 203 pdf가 있는데, 이에 대한 영상이 없는 것을 보아 직접 공부해서 풀어야 겠다.
영상을 보면서 추가적으로 풀어야 될 것 같다.

지금은 함수를 통해 약간씩 묶어주고 있는데, 코드의 양을 줄이는 것이 좋을지, 쉽게 읽는게 좋을지 모르겠다.
함수를 만들면, 각 흐름이 분해되어서 읽기가 편해지만, 작성속도가 느려지는 문제가 있긴 하다.

